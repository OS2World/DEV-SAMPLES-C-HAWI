
/*
 * This file was generated by the SOM Compiler.
 * FileName: ADRESSEF.ih.
 * Generated using:
 *     SOM Precompiler somipc: 2.29.1.7
 *     SOM Emitter emitih: 2.42
 */

/*
 *  $Header: D:/Projekte/SOM!WPS Inside!1/Source/rcs/ADRESSEF.ih 1.1 1996/04/10 13:27:45 HaWi Exp $
 */


/*
 * -- By default, for classes declared using IDL,
 * -- this emitter doesn't define redispatch/apply stubs.
 * -- Instead, it requests that the SOM kernel produce them.
 * -- To override this default, use the "notc" modifier.
 */

#ifndef SOM_AdresseF_ih
#define SOM_AdresseF_ih

#pragma checkout(suspend)

/*
 * Passthru lines: File: "C.ih", "before"
 */
#define  INCL_BASE
   #define  INCL_PM
   #include <os2.h>

   #include <stdio.h>
   #include <stdlib.h>
   #include <string.h>
   #include <time.h>


#include "ADRESSEF.h"

/*
 * Set the scope of methods functions
 */
#ifndef SOM_Scope
#ifdef __cplusplus
  #define SOM_Scope extern "C"
#else
  #define SOM_Scope extern
#endif  /* __cplusplus */
#endif  /* SOM_Scope */

#ifndef SOM_CurrentClass
    #define SOM_CurrentClass AdresseFCClassData.parentMtab
#endif  /* SOM_CurrentClass */

#define AdresseF_MaxNoMethods 0

/*
 * -- Instance data
 */
typedef void AdresseFData;

/*
 * This class introduces no instance data, so no GetData macro is provided
 */

/*
 * Primary Implementation File Support
 */
#if (defined(AdresseF_Class_Source) || defined(SOM_Module_adressef_Source))

/*
 * Trace/Debug macro
 */
#ifndef AdresseFMethodDebug
   #define AdresseFMethodDebug(c,m) SOMMethodDebug(c,m)
#endif  /* AdresseFMethodDebug */

/*
 * Current class macros for Instance and Meta classes.
 */
#undef SOMMeta
#define SOMMeta M_AdresseFCClassData.parentMtab
#undef SOMInstance
#define SOMInstance AdresseFCClassData.parentMtab

#ifndef M_AdresseF_Class_Source
   #define M_AdresseF_Class_Source
#endif    /* M_AdresseF_Class_Source */

/*
 * Overridden method: wpDragOver
 */
#pragma linkage(adressef_wpDragOver, system)
SOM_Scope MRESULT  SOMLINK adressef_wpDragOver(AdresseF *somSelf,
                HWND hwndCnr,
                PDRAGINFO pdrgInfo);
static char *somMN_AdresseFwpDragOver = "WPObject::wpDragOver";
static somId somId_AdresseFwpDragOver = &somMN_AdresseFwpDragOver;
#ifdef somId_wpDragOver
#undef somId_wpDragOver
#else
#define somId_wpDragOver somId_AdresseFwpDragOver
#endif
static somMethodProc* AdresseF_parent_WPFolder_wpDragOver_resolved;
#define AdresseF_parent_WPFolder_wpDragOver(somSelf,hwndCnr,pdrgInfo) \
  ((( somTD_WPObject_wpDragOver ) \
    AdresseF_parent_WPFolder_wpDragOver_resolved) \
         (somSelf,hwndCnr,pdrgInfo))
#ifndef SOMGD_pmc_WPFolder_wpDragOver
  #ifdef parent_WPFolder_wpDragOver
     #undef parent_WPFolder_wpDragOver
     #define SOMGD_pmc_WPFolder_wpDragOver 1
  #else
     #define parent_WPFolder_wpDragOver AdresseF_parent_WPFolder_wpDragOver
  #endif /* parent_WPFolder_wpDragOver */
#endif /* SOMGD_pmc_WPFolder_wpDragOver */
#ifndef parent_wpDragOver
     #define parent_wpDragOver AdresseF_parent_WPFolder_wpDragOver
#endif  /* parent_wpDragOver */
#define AdresseF_parents_wpDragOver(somSelf,hwndCnr,pdrgInfo) (\
   AdresseF_parent_WPFolder_wpDragOver(somSelf,hwndCnr,pdrgInfo))

/*
 * Initialize the class data structure
 */
SOMEXTERN struct AdresseFClassDataStructure SOMDLINK AdresseFClassData = {(SOMAny *) NULL};

/*
 * Define the C class data structure
 */
SOMEXTERN struct AdresseFCClassDataStructure SOMDLINK AdresseFCClassData = {(somMethodTabs) NULL};

/*
 * Routines and Structures to create the class object
 */


/*
 * Declare the Override Methods table.
 */
static somOverrideMethod_t AdresseFOM[] = {
    {    &somId_AdresseFwpDragOver,
         (somMethodProc *) adressef_wpDragOver    },
};


/*
 *  Initializers for class Ids
 */
static char * somCN_AdresseF = "AdresseF";
#ifndef somEMC_M_AdresseF_defined
#define somEMC_M_AdresseF_defined
static char * somEMC_M_AdresseF = "M_AdresseF";
#endif
static char * somPCN_AdresseF_WPFolder = "WPFolder";

static somId somPCAdresseF[] = {
    &somPCN_AdresseF_WPFolder,
};

static somStaticClassInfo AdresseFSCI = {
    4, 0, 1, 0, 0, 0,
    AdresseF_MajorVersion, AdresseF_MinorVersion,
    0, AdresseF_MaxNoMethods, 1,
    &somCN_AdresseF,
    &somEMC_M_AdresseF, 0,
    somPCAdresseF,
    (somClassDataStructure *) &AdresseFClassData,
    (somCClassDataStructure *) &AdresseFCClassData,
    (somStaticMethod_t *) NULL, AdresseFOM,
    (char *) NULL,
    (somNonInternalData_t *) NULL,  (somProcMethods_t *) NULL,
    (somVarargsFuncs_t *) NULL,
    (somTP_somClassInitFunc *) NULL,
    0, /* type code alignment */
    -1, /* use parents as directinitclasses */
    0, /* no explicit directinitclasses */
    0, /* number of general method entries */
    (somMethods_t *) NULL,
    0, /* no public data offset */
    0, /* no sci development level check */
    0, /* number of SelectInheritedMethods */
    0, /* no SelectInheritedMethods */
    0, /* number of classdata entries */
    0, /* no entry names provided currently */
    0, /* number of migrated methods */
    0, /* no migrated method implementations */
    0, /* number of initializers */
    0, /* no initializers */
    0, /* used to identify a DTS class */
    0, /* used to register dynamically computed info */
};


/*
 * Class Creation and Initialization
 */

SOMClass * SOMLINK AdresseFNewClass (integer4 somtmajorVersion,
                integer4 somtminorVersion)
{
    SOMClass *result;
    WPFolderNewClass(WPFolder_MajorVersion,WPFolder_MinorVersion);      /* static reference */
    /* Explicit metaclass, so get it */
    M_AdresseFNewClass(M_AdresseF_MajorVersion,M_AdresseF_MinorVersion);        /* static reference */
    result = somBuildClass(1,&AdresseFSCI, somtmajorVersion, somtminorVersion);
    AdresseF_parent_WPFolder_wpDragOver_resolved =
        somParentNumResolve(AdresseFCClassData.parentMtab, 1, WPObjectClassData.wpDragOver);
    return result;
}

/*
 * Functions for attributes.
 */

#endif /* Primary Implementation Support */
#pragma checkout(resume)

#endif       /* SOM_AdresseF_ih */

/*
 * -- By default, for classes declared using IDL,
 * -- this emitter doesn't define redispatch/apply stubs.
 * -- Instead, it requests that the SOM kernel produce them.
 * -- To override this default, use the "notc" modifier.
 */

#ifndef SOM_M_AdresseF_ih
#define SOM_M_AdresseF_ih

#pragma checkout(suspend)

#include "ADRESSEF.h"

/*
 * Set the scope of methods functions
 */
#ifndef SOM_Scope
#ifdef __cplusplus
  #define SOM_Scope extern "C"
#else
  #define SOM_Scope extern
#endif  /* __cplusplus */
#endif  /* SOM_Scope */

#ifndef SOM_CurrentClass
    #define SOM_CurrentClass M_AdresseFCClassData.parentMtab
#endif  /* SOM_CurrentClass */

#define M_AdresseF_MaxNoMethods 0

/*
 * -- Instance data
 */
typedef struct {
        ULONG hmod;
} M_AdresseFData;

/*
 * GetData macro
 */

/*
 * -- This emitter treats Data Tokens as Thunks by default.
 * -- Use the sc modifier "nothunks" to override this default.
 */
typedef M_AdresseFData* SOMLINK somTP_M_AdresseF_DataThunk(void*);
#ifdef __IBMC__
#pragma linkage(somTP_M_AdresseF_DataThunk, system)
#endif
typedef somTP_M_AdresseF_DataThunk *somTD_M_AdresseF_DataThunk;

#define M_AdresseFGetData(somSelf) \
   (((somTD_M_AdresseF_DataThunk)(M_AdresseFCClassData.instanceDataToken))(somSelf))

/*
 * Instance variable and staticdata access macros
 */
#ifndef NO_VARIABLE_MACROS
#define _hmod (somThis->hmod)
#endif

/*
 * Primary Implementation File Support
 */
#if (defined(AdresseF_Class_Source) || defined(M_AdresseF_Class_Source) || defined(SOM_Module_adressef_Source))

/*
 * Trace/Debug macro
 */
#ifndef M_AdresseFMethodDebug
   #define M_AdresseFMethodDebug(c,m) SOMMethodDebug(c,m)
#endif  /* M_AdresseFMethodDebug */

/*
 * Current class macros for Instance and Meta classes.
 */

/*
 * Overridden method: wpclsInitData
 */
#pragma linkage(adressef_wpclsInitData, system)
SOM_Scope void  SOMLINK adressef_wpclsInitData(M_AdresseF *somSelf);
static char *somMN_M_AdresseFwpclsInitData = "M_WPObject::wpclsInitData";
static somId somId_M_AdresseFwpclsInitData = &somMN_M_AdresseFwpclsInitData;
#ifdef somId_wpclsInitData
#undef somId_wpclsInitData
#else
#define somId_wpclsInitData somId_M_AdresseFwpclsInitData
#endif
static somMethodProc* M_AdresseF_parent_M_WPFolder_wpclsInitData_resolved;
#define M_AdresseF_parent_M_WPFolder_wpclsInitData(somSelf) \
  ((( somTD_M_WPObject_wpclsInitData ) \
    M_AdresseF_parent_M_WPFolder_wpclsInitData_resolved) \
         (somSelf))
#ifndef SOMGD_pmc_M_WPFolder_wpclsInitData
  #ifdef parent_M_WPFolder_wpclsInitData
     #undef parent_M_WPFolder_wpclsInitData
     #define SOMGD_pmc_M_WPFolder_wpclsInitData 1
  #else
     #define parent_M_WPFolder_wpclsInitData M_AdresseF_parent_M_WPFolder_wpclsInitData
  #endif /* parent_M_WPFolder_wpclsInitData */
#endif /* SOMGD_pmc_M_WPFolder_wpclsInitData */
#ifndef parent_wpclsInitData
     #define parent_wpclsInitData M_AdresseF_parent_M_WPFolder_wpclsInitData
#endif  /* parent_wpclsInitData */
#define M_AdresseF_parents_wpclsInitData(somSelf) (\
   M_AdresseF_parent_M_WPFolder_wpclsInitData(somSelf))

/*
 * Overridden method: wpclsQueryIconData
 */
#pragma linkage(adressef_wpclsQueryIconData, system)
SOM_Scope ULONG  SOMLINK adressef_wpclsQueryIconData(M_AdresseF *somSelf,
                PICONINFO pIconInfo);
static char *somMN_M_AdresseFwpclsQueryIconData = "M_WPObject::wpclsQueryIconData";
static somId somId_M_AdresseFwpclsQueryIconData = &somMN_M_AdresseFwpclsQueryIconData;
#ifdef somId_wpclsQueryIconData
#undef somId_wpclsQueryIconData
#else
#define somId_wpclsQueryIconData somId_M_AdresseFwpclsQueryIconData
#endif
static somMethodProc* M_AdresseF_parent_M_WPFolder_wpclsQueryIconData_resolved;
#define M_AdresseF_parent_M_WPFolder_wpclsQueryIconData(somSelf,pIconInfo) \
  ((( somTD_M_WPObject_wpclsQueryIconData ) \
    M_AdresseF_parent_M_WPFolder_wpclsQueryIconData_resolved) \
         (somSelf,pIconInfo))
#ifndef SOMGD_pmc_M_WPFolder_wpclsQueryIconData
  #ifdef parent_M_WPFolder_wpclsQueryIconData
     #undef parent_M_WPFolder_wpclsQueryIconData
     #define SOMGD_pmc_M_WPFolder_wpclsQueryIconData 1
  #else
     #define parent_M_WPFolder_wpclsQueryIconData M_AdresseF_parent_M_WPFolder_wpclsQueryIconData
  #endif /* parent_M_WPFolder_wpclsQueryIconData */
#endif /* SOMGD_pmc_M_WPFolder_wpclsQueryIconData */
#ifndef parent_wpclsQueryIconData
     #define parent_wpclsQueryIconData M_AdresseF_parent_M_WPFolder_wpclsQueryIconData
#endif  /* parent_wpclsQueryIconData */
#define M_AdresseF_parents_wpclsQueryIconData(somSelf,pIconInfo) (\
   M_AdresseF_parent_M_WPFolder_wpclsQueryIconData(somSelf,pIconInfo))

/*
 * Overridden method: wpclsQueryStyle
 */
#pragma linkage(adressef_wpclsQueryStyle, system)
SOM_Scope ULONG  SOMLINK adressef_wpclsQueryStyle(M_AdresseF *somSelf);
static char *somMN_M_AdresseFwpclsQueryStyle = "M_WPObject::wpclsQueryStyle";
static somId somId_M_AdresseFwpclsQueryStyle = &somMN_M_AdresseFwpclsQueryStyle;
#ifdef somId_wpclsQueryStyle
#undef somId_wpclsQueryStyle
#else
#define somId_wpclsQueryStyle somId_M_AdresseFwpclsQueryStyle
#endif
static somMethodProc* M_AdresseF_parent_M_WPFolder_wpclsQueryStyle_resolved;
#define M_AdresseF_parent_M_WPFolder_wpclsQueryStyle(somSelf) \
  ((( somTD_M_WPObject_wpclsQueryStyle ) \
    M_AdresseF_parent_M_WPFolder_wpclsQueryStyle_resolved) \
         (somSelf))
#ifndef SOMGD_pmc_M_WPFolder_wpclsQueryStyle
  #ifdef parent_M_WPFolder_wpclsQueryStyle
     #undef parent_M_WPFolder_wpclsQueryStyle
     #define SOMGD_pmc_M_WPFolder_wpclsQueryStyle 1
  #else
     #define parent_M_WPFolder_wpclsQueryStyle M_AdresseF_parent_M_WPFolder_wpclsQueryStyle
  #endif /* parent_M_WPFolder_wpclsQueryStyle */
#endif /* SOMGD_pmc_M_WPFolder_wpclsQueryStyle */
#ifndef parent_wpclsQueryStyle
     #define parent_wpclsQueryStyle M_AdresseF_parent_M_WPFolder_wpclsQueryStyle
#endif  /* parent_wpclsQueryStyle */
#define M_AdresseF_parents_wpclsQueryStyle(somSelf) (\
   M_AdresseF_parent_M_WPFolder_wpclsQueryStyle(somSelf))

/*
 * Overridden method: wpclsQueryTitle
 */
#pragma linkage(adressef_wpclsQueryTitle, system)
SOM_Scope PSZ  SOMLINK adressef_wpclsQueryTitle(M_AdresseF *somSelf);
static char *somMN_M_AdresseFwpclsQueryTitle = "M_WPObject::wpclsQueryTitle";
static somId somId_M_AdresseFwpclsQueryTitle = &somMN_M_AdresseFwpclsQueryTitle;
#ifdef somId_wpclsQueryTitle
#undef somId_wpclsQueryTitle
#else
#define somId_wpclsQueryTitle somId_M_AdresseFwpclsQueryTitle
#endif
static somMethodProc* M_AdresseF_parent_M_WPFolder_wpclsQueryTitle_resolved;
#define M_AdresseF_parent_M_WPFolder_wpclsQueryTitle(somSelf) \
  ((( somTD_M_WPObject_wpclsQueryTitle ) \
    M_AdresseF_parent_M_WPFolder_wpclsQueryTitle_resolved) \
         (somSelf))
#ifndef SOMGD_pmc_M_WPFolder_wpclsQueryTitle
  #ifdef parent_M_WPFolder_wpclsQueryTitle
     #undef parent_M_WPFolder_wpclsQueryTitle
     #define SOMGD_pmc_M_WPFolder_wpclsQueryTitle 1
  #else
     #define parent_M_WPFolder_wpclsQueryTitle M_AdresseF_parent_M_WPFolder_wpclsQueryTitle
  #endif /* parent_M_WPFolder_wpclsQueryTitle */
#endif /* SOMGD_pmc_M_WPFolder_wpclsQueryTitle */
#ifndef parent_wpclsQueryTitle
     #define parent_wpclsQueryTitle M_AdresseF_parent_M_WPFolder_wpclsQueryTitle
#endif  /* parent_wpclsQueryTitle */
#define M_AdresseF_parents_wpclsQueryTitle(somSelf) (\
   M_AdresseF_parent_M_WPFolder_wpclsQueryTitle(somSelf))

/*
 * Initialize the class data structure
 */
SOMEXTERN struct M_AdresseFClassDataStructure SOMDLINK M_AdresseFClassData = {(SOMAny *) NULL};

/*
 * Define the C class data structure
 */
SOMEXTERN struct M_AdresseFCClassDataStructure SOMDLINK M_AdresseFCClassData = {(somMethodTabs) NULL};

/*
 * Routines and Structures to create the class object
 */


/*
 * Declare the Override Methods table.
 */
static somOverrideMethod_t M_AdresseFOM[] = {
    {    &somId_M_AdresseFwpclsInitData,
         (somMethodProc *) adressef_wpclsInitData    },
    {    &somId_M_AdresseFwpclsQueryIconData,
         (somMethodProc *) adressef_wpclsQueryIconData    },
    {    &somId_M_AdresseFwpclsQueryStyle,
         (somMethodProc *) adressef_wpclsQueryStyle    },
    {    &somId_M_AdresseFwpclsQueryTitle,
         (somMethodProc *) adressef_wpclsQueryTitle    },
};


/*
 *  Initializers for class Ids
 */
static char * somCN_M_AdresseF = "M_AdresseF";
static char * somPCN_M_AdresseF_M_WPFolder = "M_WPFolder";

static somId somPCM_AdresseF[] = {
    &somPCN_M_AdresseF_M_WPFolder,
};

static somStaticClassInfo M_AdresseFSCI = {
    4, 0, 4, 0, 0, 0,
    M_AdresseF_MajorVersion, M_AdresseF_MinorVersion,
    sizeof(M_AdresseFData), M_AdresseF_MaxNoMethods, 1,
    &somCN_M_AdresseF,
    (somId) NULL, 1,
    somPCM_AdresseF,
    (somClassDataStructure *) &M_AdresseFClassData,
    (somCClassDataStructure *) &M_AdresseFCClassData,
    (somStaticMethod_t *) NULL, M_AdresseFOM,
    (char *) NULL,
    (somNonInternalData_t *) NULL,  (somProcMethods_t *) NULL,
    (somVarargsFuncs_t *) NULL,
    (somTP_somClassInitFunc *) NULL,
    4, /* type code alignment */
    -1, /* use parents as directinitclasses */
    0, /* no explicit directinitclasses */
    0, /* number of general method entries */
    (somMethods_t *) NULL,
    0, /* no public data offset */
    0, /* no sci development level check */
    0, /* number of SelectInheritedMethods */
    0, /* no SelectInheritedMethods */
    0, /* number of classdata entries */
    0, /* no entry names provided currently */
    0, /* number of migrated methods */
    0, /* no migrated method implementations */
    0, /* number of initializers */
    0, /* no initializers */
    0, /* used to identify a DTS class */
    0, /* used to register dynamically computed info */
};


/*
 * Class Creation and Initialization
 */

SOMClass * SOMLINK M_AdresseFNewClass (integer4 somtmajorVersion,
                integer4 somtminorVersion)
{
    SOMClass *result;
    M_WPFolderNewClass(M_WPFolder_MajorVersion,M_WPFolder_MinorVersion);        /* static reference */
    result = somBuildClass(1,&M_AdresseFSCI, somtmajorVersion, somtminorVersion);
    M_AdresseF_parent_M_WPFolder_wpclsQueryTitle_resolved =
        somParentNumResolve(M_AdresseFCClassData.parentMtab, 1, M_WPObjectClassData.wpclsQueryTitle);
    M_AdresseF_parent_M_WPFolder_wpclsQueryStyle_resolved =
        somParentNumResolve(M_AdresseFCClassData.parentMtab, 1, M_WPObjectClassData.wpclsQueryStyle);
    M_AdresseF_parent_M_WPFolder_wpclsQueryIconData_resolved =
        somParentNumResolve(M_AdresseFCClassData.parentMtab, 1, M_WPObjectClassData.wpclsQueryIconData);
    M_AdresseF_parent_M_WPFolder_wpclsInitData_resolved =
        somParentNumResolve(M_AdresseFCClassData.parentMtab, 1, M_WPObjectClassData.wpclsInitData);
    return result;
}

/*
 * Functions for attributes.
 */

#endif /* Primary Implementation Support */
#pragma checkout(resume)

#endif       /* SOM_M_AdresseF_ih */
